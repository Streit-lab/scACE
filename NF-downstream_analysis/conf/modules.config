/*
========================================================================================
    Config file for defining DSL2 per module options and publishing paths
========================================================================================
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {
/////////////////////////////////////////////////////////////
    // DEFAULTS FOR ALL R PROCESSES
    withName: R {
        cpus = { check_max( 8, 'cpus' ) }
        memory = { check_max( 36.GB, 'memory' ) }
        time = { check_max( 4.h, 'time' ) }
        container = "evahamrud/sc_multi_omic-archr:latest"
    }
/////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////
////    PREPROCESSING SUBWORKFLOW  ////
    withName: EDIT_GTF {
        publishDir = [
            path: { "${params.outdir}/Upstream_processing/${task.process.tokenize(":")[-2]}/edit_gtf" },
            mode: 'copy']
    }
    withName: PREPROCESS {
        publishDir = [
            path: { "${params.outdir}/Upstream_processing/${task.process.tokenize(":")[-2]}/preprocess" },
            mode: 'copy']
        cpus = { check_max( 12, 'cpus' ) }
        memory = { check_max( 120.GB, 'memory' ) }
        time = { check_max( 4.h, 'time' ) }
    }
////    FILTERING SUBWORKFLOW  ////
    withName: FILTER {
        publishDir = [
            path: { "${params.outdir}/Upstream_processing/${task.process.tokenize(":")[-2]}/filter" },
            mode: 'copy']
        cpus = { check_max( 5, 'cpus' ) } //set to number of samples for TSSEnrichment
        memory = { check_max( 120.GB, 'memory' ) }
        time = { check_max( 4.h, 'time' ) }
        ext.args = '--filter TRUE --factor 1'
    }
    withName: SPLIT_STAGES {
        publishDir = [
            path: { "" },
            mode: 'copy']
        publishDir = [enabled: false]
    }
    withName: FILTER_CLUSTER_LOOP {
        publishDir = [
            path: { "${params.outdir}/Upstream_processing/${task.process.tokenize(":")[-2]}/${meta.sample_id}" },
            mode: 'copy']
        memory = { check_max( 60.GB, 'memory' ) }
        ext.args = '--clust_res 3.6 --clustree_by 0.45 --verbose TRUE'
    }
    withName: FILTER_FULL {
        publishDir = [
            path: { "${params.outdir}/Upstream_processing/${task.process.tokenize(":")[-2]}/${meta.sample_id}" },
            mode: 'copy']
        memory = { check_max( 100.GB, 'memory' ) }
    }
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
    ////    PEAK CALL WORKFLOW    ////
    withName: CLUSTER {
        publishDir = [
            path: { "${params.outdir}/Processing/${meta.sample_id}/${task.process.tokenize(":")[-2]}/clustering" },
            mode: 'copy']
        memory = { check_max( 60.GB, 'memory' ) }
        ext.args = '--stage_clust_res 0.6 --full_clust_res 0.8 --clustree FALSE --stage_clustree_by 0.1 --full_clustree_by 0.1 --verbose TRUE'
    }
    withName: GENE_SCORES {
        publishDir = [
            path: { "${params.outdir}/Processing/${meta.sample_id}/${task.process.tokenize(":")[-2]}/gene_scores" },
            mode: 'copy']
        memory = { check_max( 100.GB, 'memory' ) }
    }
    withName: PEAK_CALL {
        publishDir = [
            path: { "${params.outdir}/Processing/${meta.sample_id}/${task.process.tokenize(":")[-2]}/peak_call" },
            mode: 'copy']
        container = "evahamrud/sc_multi_omic-archr_extra:latest"
        memory = { check_max( 100.GB, 'memory' ) }
        ext.args = '--group_by clusters --verbose TRUE'
    }
    withName: HEATMAP_PEAKS {
        publishDir = [
            path: { "${params.outdir}/Processing/${meta.sample_id}/${task.process.tokenize(":")[-2]}/peak_heatmaps" },
            mode: 'copy']
        memory = { check_max( 100.GB, 'memory' ) }
        ext.args = '--matrix PeakMatrix --verbose TRUE'
    }
    withName: HEATMAP_GEX {
        publishDir = [
            path: { "${params.outdir}/Processing/${meta.sample_id}/${task.process.tokenize(":")[-2]}/gex_heatmaps" },
            mode: 'copy']
        memory = { check_max( 100.GB, 'memory' ) }
        ext.args = '--matrix GeneScoreMatrix --verbose TRUE'
    }
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
    ////    INTEGRATION WORKFLOW    ////
    withName: UNCON_INTEGRATE {
        publishDir = [
            path: { "${params.outdir}/Processing/${meta.sample_id}/${task.process.tokenize(":")[-2]}/1_unconstrained_integration" },
            mode: 'copy']
        cpus = { check_max( 5, 'cpus' ) } //see if setting threads to 5 works for full data
        memory = { check_max( 120.GB, 'memory' ) }
        time = { check_max( 6.h, 'time' ) }
    }
    withName: INTEGRATION_CLUSTERS_COMPARE {
        publishDir = [
            path: { "${params.outdir}/Processing/${meta.sample_id}/${task.process.tokenize(":")[-2]}/2_cluster_relationships" },
            mode: 'copy']
    }
    withName: CLUSTER_IDENTIFY {
        publishDir = [
            path: { "${params.outdir}/Processing/${meta.sample_id}/${task.process.tokenize(":")[-2]}/2_identify_clusters" },
            mode: 'copy']
    }
    
    //// FILTER OUT CONTAMINATION
    withName: SUBSET_INTEGRATION {
        publishDir = [
            path: { "${params.outdir}/Processing/${meta.sample_id}/${task.process.tokenize(":")[-2]}/3_removed_contamination" },
            mode: 'copy']
        ext.args = '--meta_col1 scHelper_cell_type_old --groups1 BI,PGC,meso,endo --invert1 TRUE'
    }
    withName: CLUSTER_INTEGRATION {
        publishDir = [
            path: { "${params.outdir}/Processing/${meta.sample_id}/${task.process.tokenize(":")[-2]}/4_reclustered" },
            mode: 'copy']
    }
    withName: CLUSTER_IDENTIFY_FILTERED {
        publishDir = [
            path: { "${params.outdir}/Processing/${meta.sample_id}/${task.process.tokenize(":")[-2]}/5_identify_clusters" },
            mode: 'copy']
    }
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
    ////    PEAK EXPLORING WORKFLOW    ////


    /// Compare stages
    withName: SE_CALCULATE {
        publishDir = [
            path: { "${params.outdir}/Processing/${meta.sample_id}/${task.process.tokenize(":")[-2]}/se_calculate" },
            mode: 'copy']
        memory = { check_max( 100.GB, 'memory' ) }
        ext.args = '--group_by clusters --verbose TRUE'
    }
    withName: COMPARE_INTERCLUSTER_VARIABILITY {
        publishDir = [
            path: { "${params.outdir}/Downstream_processing/compare_intercluster_variability" },
            mode: 'copy']
        memory = { check_max( 100.GB, 'memory' ) }
        ext.args = '--verbose TRUE --matrix PeakMatrix'
    }

    /// Transfer labels process
    withName: TRANSFER_LABELS {
        publishDir = [
            path: { "${params.outdir}/Downstream_processing/transfer_labels/label_transfer" },
            mode: 'copy']
    }
    withName: PEAK_CALL_TL {
        publishDir = [
            path: { "${params.outdir}/Downstream_processing/transfer_labels/peak_call" },
            mode: 'copy']
        container = "evahamrud/sc_multi_omic-archr_extra:latest"
        memory = { check_max( 100.GB, 'memory' ) }
        ext.args = '--group_by stage_clusters --verbose TRUE'
    }
    withName: HEATMAP_PEAKS_TL {
        publishDir = [
            path: { "${params.outdir}/Downstream_processing/transfer_labels/peak_heatmaps" },
            mode: 'copy']
        memory = { check_max( 100.GB, 'memory' ) }
        ext.args = '--group_by stage_clusters --verbose TRUE --matrix PeakMatrix'
    }
    withName: HEATMAP_GEX_TL {
        publishDir = [
            path: { "${params.outdir}/Downstream_processing/transfer_labels/gex_heatmaps" },
            mode: 'copy']
        memory = { check_max( 100.GB, 'memory' ) }
        ext.args = '--group_by stage_clusters --verbose TRUE --matrix GeneScoreMatrix'
    }

    ///
    withName: DIFF_PEAKS_STAGES {
        publishDir = [
            path: { "${params.outdir}/Downstream_processing/transfer_labels/diff_peaks_stages" },
            mode: 'copy']
        memory = { check_max( 100.GB, 'memory' ) }
    }
    withName: DIFF_PEAKS_CLUSTERS {
        publishDir = [
            path: { "${params.outdir}/Downstream_processing/transfer_labels/diff_peaks_clusters" },
            mode: 'copy']
        memory = { check_max( 100.GB, 'memory' ) }
    }

    /// Cluster peaks
    withName: CLUSTER_PEAKS {
        publishDir = [
            path: { "${params.outdir}/Downstream_processing/transfer_labels/cluster_peaks" },
            mode: 'copy']
        cpus = { check_max( 12, 'cpus' ) }
        memory = { check_max( 240.GB, 'memory' ) }
        time = { check_max( 8.h, 'time' ) }
    }

    /// Find enhancers
    withName: SE_CALCULATE_TL {
        publishDir = [
            path: { "${params.outdir}/Downstream_processing/transfer_labels/se_calculate" },
            mode: 'copy']
        memory = { check_max( 100.GB, 'memory' ) }
        ext.args = '--group_by stage_clusters --verbose TRUE'
    }
    withName: FINDING_ENHANCERS {
        publishDir = [
            path: { "${params.outdir}/Downstream_processing/transfer_labels/finding_enhancers" },
            mode: 'copy']
        memory = { check_max( 100.GB, 'memory' ) }
    }
    withName: PLOT_MANUALLY_FILTERED_ENHANCERS {
        publishDir = [
            path: { "${params.outdir}/Downstream_processing/transfer_labels/plot_manually_filtered_enhancers" },
            mode: 'copy']
        memory = { check_max( 100.GB, 'memory' ) }
    }

    /// NPB subset
    withName: SUBSET_NPB {
        publishDir = [
            path: { "${params.outdir}/Downstream_processing/NPB/subset" },
            mode: 'copy']
        ext.args = '--meta_col1 stage_clusters --groups1 HH7_C4,HH7_C5,HH7_C6,ss4_C2,ss4_C3,ss4_C5,ss4_C6,ss8_C1,ss8_C5,ss8_C7,ss8_C8 --invert1 FALSE'
    }
    withName: CLUSTER_NPB {
        publishDir = [
            path: { "${params.outdir}/Downstream_processing/NPB/clustered" },
            mode: 'copy']
        ext.args = '--full_clust_res 0.8 --clustree FALSE --verbose TRUE'
    }
    withName: PEAK_CALL_NPB {
        publishDir = [
            path: { "${params.outdir}/Downstream_processing/NPB/peak_call" },
            mode: 'copy']
        container = "evahamrud/sc_multi_omic-archr_extra:latest"
        memory = { check_max( 100.GB, 'memory' ) }
        ext.args = '--group_by clusters --verbose TRUE'
    }

    /// NPB subset using just labels
    withName: SUBSET_NPB_LABELS {
        publishDir = [
            path: { "${params.outdir}/Downstream_processing/NPB_labels/subset" },
            mode: 'copy']
        ext.args = '--meta_col1 stage --groups1 HH7,ss4,ss8 --invert1 FALSE --meta_col2 scHelper_cell_type_old --groups2 aNPB,aPPR,dNC,NC,pNPB,pPPR,PPR --invert2 FALSE'
    }
    withName: CLUSTER_NPB_LABELS {
        publishDir = [
            path: { "${params.outdir}/Downstream_processing/NPB_labels/clustered" },
            mode: 'copy']
        ext.args = '--full_clust_res 0.8 --clustree FALSE --verbose TRUE'
    }
    withName: PEAK_CALL_NPB_LABELS {
        publishDir = [
            path: { "${params.outdir}/Downstream_processing/NPB_labels/peak_call" },
            mode: 'copy']
        container = "evahamrud/sc_multi_omic-archr_extra:latest"
        memory = { check_max( 100.GB, 'memory' ) }
        ext.args = '--group_by clusters --verbose TRUE'
    }


    /// NPB subset at each stage
    withName: SUBSET_NPB_HH7 {
        publishDir = [
            path: { "${params.outdir}/Downstream_processing/NPB_HH7/subset" },
            mode: 'copy']
        ext.args = '--meta_col1 stage_clusters --groups1 HH7_C4,HH7_C5,HH7_C6 --invert1 FALSE'
    }
    withName: CLUSTER_NPB_HH7 {
        publishDir = [
            path: { "${params.outdir}/Downstream_processing/NPB_HH7/clustered" },
            mode: 'copy']
        ext.args = '--full_clust_res 0.8 --clustree FALSE --verbose TRUE'
    }
    withName: SUBSET_NPB_SS4 {
        publishDir = [
            path: { "${params.outdir}/Downstream_processing/NPB_SS4/subset" },
            mode: 'copy']
        ext.args = '--meta_col1 stage_clusters --groups1 ss4_C2,ss4_C3,ss4_C5,ss4_C6 --invert1 FALSE'
    }
    withName: CLUSTER_NPB_SS4 {
        publishDir = [
            path: { "${params.outdir}/Downstream_processing/NPB_SS4/clustered" },
            mode: 'copy']
        ext.args = '--full_clust_res 0.8 --clustree FALSE --verbose TRUE'
    }
    withName: SUBSET_NPB_SS8 {
        publishDir = [
            path: { "${params.outdir}/Downstream_processing/NPB_SS8/subset" },
            mode: 'copy']
        ext.args = '--meta_col1 stage_clusters --groups1 ss8_C1,ss8_C5,ss8_C7,ss8_C8 --invert1 FALSE'
    }
    withName: CLUSTER_NPB_SS8 {
        publishDir = [
            path: { "${params.outdir}/Downstream_processing/NPB_SS8/clustered" },
            mode: 'copy']
        ext.args = '--full_clust_res 0.8 --clustree FALSE --verbose TRUE'
    }
}
