/*
========================================================================================
    Config file for defining DSL2 per module options and publishing paths
========================================================================================
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {
/////////////////////////////////////////////////////////////
    // DEFAULTS FOR ALL R PROCESSES
    withName: R {
        cpus = { check_max( 8, 'cpus' ) }
        memory = { check_max( 36.GB, 'memory' ) }
        time = { check_max( 4.h, 'time' ) }
        container = "evahamrud/sc_multi_omic-archr:latest"
    }
/////////////////////////////////////////////////////////////

    // EDIT GTF
    withName: EDIT_GTF {
        publishDir = [
            path: { "${params.outdir}/ArchR_preprocessing/edited_gtf" },
            mode: 'copy']
    }

    // ARCHR PROCESSING WORKFLOW - FULL DATA
    withName: ARCHR_PREPROCESSING {
        publishDir = [
            path: { "${params.outdir}/ArchR_preprocessing/1_ArchR_preprocessing" },
            mode: 'copy']
        cpus = { check_max( 12, 'cpus' ) }
        memory = { check_max( 120.GB, 'memory' ) }
        time = { check_max( 4.h, 'time' ) }
    }
    withName: ARCHR_DOUBLETS {
        publishDir = [
            path: { "${params.outdir}/ArchR_preprocessing/1.5_ArchR_doublets" },
            mode: 'copy']
    }
    withName: ARCHR_FILTERING {
        publishDir = [
            path: { "${params.outdir}/ArchR_preprocessing/2_ArchR_filtering" },
            mode: 'copy']
        cpus = { check_max( 5, 'cpus' ) } //set to number of samples for TSSEnrichment
        memory = { check_max( 120.GB, 'memory' ) }
        time = { check_max( 4.h, 'time' ) }
    }
    withName: ARCHR_CLUSTERING_PREFILTER {
        publishDir = [
            path: { "${params.outdir}/ArchR_preprocessing/3_ArchR_clustering_prefiltering" },
            mode: 'copy']
        memory = { check_max( 52.GB, 'memory' ) }
    }
    withName: ARCHR_FILTER_CLUSTERS_1 {
        publishDir = [
            path: { "${params.outdir}/ArchR_preprocessing/4_ArchR_filter_clusters_1" },
            mode: 'copy']
    }
    withName: ARCHR_CLUSTERING_POSTFILTER {
        publishDir = [
            path: { "${params.outdir}/ArchR_preprocessing/5_ArchR_clustering_postfiltering" },
            mode: 'copy']
        memory = { check_max( 52.GB, 'memory' ) }
    }
    withName: ARCHR_FILTER_CLUSTERS_2 {
        publishDir = [
            path: { "${params.outdir}/ArchR_preprocessing/6_ArchR_filter_clusters_2" },
            mode: 'copy']
    }
    withName: ARCHR_CLUSTERING_POSTFILTER_TWICE {
        publishDir = [
            path: { "${params.outdir}/ArchR_preprocessing/7_ArchR_clustering_postfiltering_twice" },
            mode: 'copy']
        container = "evahamrud/sc_multi_omic-archr_extra:latest"
        memory = { check_max( 52.GB, 'memory' ) }
    }
    withName: ARCHR_DOUBLETS_FILTERED {
        publishDir = [
            path: { "${params.outdir}/ArchR_preprocessing/7.5_ArchR_doublets" },
            mode: 'copy']
    }
    withName: ARCHR_GENE_SCORES {
        publishDir = [
            path: { "${params.outdir}/ArchR_preprocessing/8_ArchR_gene_scores" },
            mode: 'copy']
    }

    // ARCHR PROCESSING WORKFLOW - STAGE BY STAGE
    withName: ARCHR_SPLIT_STAGES {
        publishDir = [
            path: { "${params.outdir}/ArchR_preprocessing/ArchR_split" },
            mode: 'copy']
    }
    withName: ARCHR_CLUSTERING_STAGES {
        publishDir = [
            path: { "${params.outdir}/ArchR_preprocessing/${meta.sample_id}/ArchR_clustering" },
            mode: 'copy']
        memory = { check_max( 52.GB, 'memory' ) }
    }
    withName: ARCHR_GENE_SCORES_STAGES {
        publishDir = [
            path: { "${params.outdir}/ArchR_preprocessing/${meta.sample_id}/ArchR_gene_scores" },
            mode: 'copy']
    }

}
