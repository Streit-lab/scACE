/*
========================================================================================
    Config file for defining DSL2 per module options and publishing paths
========================================================================================
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {
/////////////////////////////////////////////////////////////
    // DEFAULTS FOR ALL R PROCESSES
    withName: R {
        cpus = { check_max( 8, 'cpus' ) }
        memory = { check_max( 36.GB, 'memory' ) }
        time = { check_max( 4.h, 'time' ) }
        container = "evahamrud/sc_multi_omic-archr:latest"
    }
    // DEFAULTS FOR ALL PYTHON PROCESSES
    withName: PYTHON {
        cpus = { check_max( 8, 'cpus' ) }
        memory = { check_max( 36.GB, 'memory' ) }
        time = { check_max( 4.h, 'time' ) }
        container = "alexthiery/seacells:latest"
    }
/////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////
///////////         UPSTREAM PROCESSING           ////////////
//////////////////////////////////////////////////////////////

////    PREPROCESSING SUBWORKFLOW  ////
    withName: EDIT_GTF {
        publishDir = [
            path: { "${params.outdir}/Upstream_processing/${task.process.tokenize(":")[-2]}/edit_gtf" },
            mode: 'copy']
    }
    withName: PREPROCESS {
        publishDir = [
            path: { "${params.outdir}/Upstream_processing/${task.process.tokenize(":")[-2]}/preprocess" },
            mode: 'copy']
        cpus = { check_max( 12, 'cpus' ) }
        memory = { check_max( 120.GB, 'memory' ) }
        time = { check_max( 4.h, 'time' ) }
    }

////    FILTERING SUBWORKFLOW  ////
    withName: GLOBAL_FILTER {
        publishDir = [
            path: { "${params.outdir}/Upstream_processing/${task.process.tokenize(":")[-2]}/global_filter" },
            mode: 'copy']
        cpus = { check_max( 5, 'cpus' ) } //set to number of samples for TSSEnrichment
        memory = { check_max( 120.GB, 'memory' ) }
        time = { check_max( 4.h, 'time' ) }
        ext.args = '--filter TRUE --factor 1'
    }
    withName: SPLIT_STAGES {
        publishDir = [
            path: { "" },
            mode: 'copy']
        publishDir = [enabled: false]
    }
    withName: FILTER_CLUSTER_LOOP {
        publishDir = [
            path: { "${params.outdir}/Upstream_processing/${task.process.tokenize(":")[-2]}/${meta.sample_id}" },
            mode: 'copy']
        memory = { check_max( 60.GB, 'memory' ) }
        ext.args = '--clust_res 3.6 --clustree_by 0.45 --verbose TRUE'
    }
    withName: FILTER_FULL {
        publishDir = [
            path: { "${params.outdir}/Upstream_processing/${task.process.tokenize(":")[-2]}/${meta.sample_id}" },
            mode: 'copy']
        memory = { check_max( 100.GB, 'memory' ) }
    }

/////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////         PROCESSING - different from non-metacells branch          /////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////

    withName: PEAK_CALL {
        publishDir = [
            path: { "${params.outdir}/Processing/${meta.sample_id}/Peak_call" },
            mode: 'copy']
        container = "evahamrud/sc_multi_omic-archr_extra:latest"
        memory = { check_max( 100.GB, 'memory' ) }
        ext.args = '--group_by clusters --heatmaps_stage TRUE --verbose TRUE'
    }

////    SEACELLS   ////
    withName: ARCHR_EXPORT_DATA {
        publishDir = [
            path: { "${params.outdir}/Processing/${meta.sample_id}/${task.process.tokenize(":")[-2]}/0_ATAC_exported_data" },
            mode: 'copy']
        memory = { check_max( 100.GB, 'memory' ) }
        ext.args = '--verbose TRUE'
    }
    withName: CREATE_ANNDATA {
        container = "alexthiery/seacells:latest"
        publishDir = [
            path: { "${params.outdir}/Processing/${meta.sample_id}/${task.process.tokenize(":")[-2]}/1_ATAC_Anndata_object" },
            mode: 'copy']
        memory = { check_max( 100.GB, 'memory' ) }
        ext.args = "--input ./input/exported_ArchR_data/"
    }
    withName: SEURAT_TO_ANNDATA {
        container = "alexthiery/10x-npb-schelper:base-0.2.4"
        publishDir = [
            path: { "${params.outdir}/Processing/${meta.sample_id}/${task.process.tokenize(":")[-2]}/1_RNA_Anndata_object" },
            mode: 'copy']
        ext.args = "--data_path ./input/ --assay integrated --outfile AnnData --group_by scHelper_cell_type --verbose TRUE"
    }
    withName: CALCULATE_SEACELLS {
        container = "alexthiery/seacells:latest"
        publishDir = [
            path: { "${params.outdir}/Processing/${meta.sample_id}/${task.process.tokenize(":")[-2]}/2_SEACells_computation" },
            mode: 'copy']
        cpus = { check_max( 32, 'cpus' ) }
        memory = { check_max( 200.GB, 'memory' ) }
        time = { check_max( 60.h, 'time' ) }
        ext.args = "--input ./input/rds_files/"
    }
    withName: META_TO_SEURAT_RNA {
        container = "alexthiery/10x-npb-schelper:base-0.2.4"
        publishDir = [
            path: { "${params.outdir}/Processing/${meta.sample_id}/${task.process.tokenize(":")[-2]}/3_SEACells_metadata_to_seurat" },
            mode: 'copy']
        ext.args = "--metadata_file_name exported_data/Cell_metadata.csv --categories run,sex,stage,seurat_clusters,scHelper_cell_type"
    }
    withName: META_TO_SEURAT_ATAC {
        container = "alexthiery/10x-npb-schelper:base-0.2.4"
        publishDir = [
            path: { "${params.outdir}/Processing/${meta.sample_id}/${task.process.tokenize(":")[-2]}/3_SEACells_metadata_to_seurat" },
            mode: 'copy']
        ext.args = "--metadata_file_name exported_data/Cell_metadata.csv --matrix_file_name exported_ArchR_data/gene_scores.csv"
    }
    withName: PROCESS_METACELLS_RNA {
        container = "alexthiery/10x-npb-schelper:base-0.2.4"
        publishDir = [
            path: { "${params.outdir}/Processing/${meta.sample_id}/${task.process.tokenize(":")[-2]}/4_Process_metacells" },
            mode: 'copy']
    }
    withName: CLASSIFY_METACELLS {
        container = "alexthiery/10x-npb-schelper:base-0.2.4"
        publishDir = [
            path: { "${params.outdir}/Processing/${meta.sample_id}/${task.process.tokenize(":")[-2]}/5_Classify_metacells" },
            mode: 'copy']
    }
    withName: SEURAT_TO_ANNDATA_PROCESSED {
        container = "alexthiery/10x-npb-schelper:base-0.2.4"
        publishDir = [
            path: { "${params.outdir}/Processing/${meta.sample_id}/${task.process.tokenize(":")[-2]}/6_RNA_Anndata_object_processed_classified" },
            mode: 'copy']
        ext.args = "--data_path ./input/rds_files/ --input seacells_seurat_RNA_processed.RDS --assay RNA --outfile AnnData --group_by scHelper_cell_type --verbose TRUE"
    }




//     withName: UNCON_INTEGRATE {
//         publishDir = [
//             path: { "${params.outdir}/Processing/${meta.sample_id}/2_unconstrained_integration" },
//             mode: 'copy']
//         cpus = { check_max( 5, 'cpus' ) } //see if setting threads to 5 works for full data
//         memory = { check_max( 120.GB, 'memory' ) }
//         time = { check_max( 6.h, 'time' ) }
//     }

//     ////  PROCESSING    ////
//     withName: CLUSTER {
//         publishDir = [
//             path: { "${params.outdir}/Processing/${meta.sample_id}/1_clustered" },
//             mode: 'copy']
//         memory = { check_max( 60.GB, 'memory' ) }
//         ext.args = '--stage_clust_res 0.6 --full_clust_res 0.8 --clustree_stage TRUE --stage_clustree_by 0.1 --GeneScore_heatmaps_stage TRUE --verbose TRUE'
//     }
    
//     withName: CLUSTER_IDENTIFY {
//         publishDir = [
//             path: { "${params.outdir}/Processing/${meta.sample_id}/3_identify_clusters" },
//             mode: 'copy']
//     }
//     withName: SUBSET_INTEGRATION {
//         publishDir = [
//             path: { "${params.outdir}/Processing/${meta.sample_id}/4_removed_contamination" },
//             mode: 'copy']
//         ext.args = '--meta_col1 scHelper_cell_type_old --groups1 BI,PGC,meso,endo --invert1 TRUE'
//     }
//     withName: CLUSTER_INTEGRATION {
//         publishDir = [
//             path: { "${params.outdir}/Processing/${meta.sample_id}/5_reclustered" },
//             mode: 'copy']
//             ext.args = '--stage_clust_res 1.0 --full_clust_res 1.2 --clustree_stage TRUE --stage_clustree_by 0.2 --GeneScore_heatmaps_stage TRUE --verbose TRUE'
//     }
//     withName: CLUSTER_IDENTIFY_FILTERED {
//         publishDir = [
//             path: { "${params.outdir}/Processing/${meta.sample_id}/6_identify_clusters_filtered" },
//             mode: 'copy']
//     }
//     
    

//     ////    TRANSFER LABELS WORKFLOW    ////
//     withName: TRANSFER_LABELS_NEW {
//         publishDir = [
//             path: { "${params.outdir}/Processing/${meta.sample_id}/1_label_transfer" },
//             mode: 'copy']
//         memory = { check_max( 100.GB, 'memory' ) }
//         ext.args = '--verbose TRUE'
//     }
//     withName: CLUSTER_TL {
//         publishDir = [
//             path: { "${params.outdir}/Processing/${meta.sample_id}/2_clustered" },
//             mode: 'copy']
//         memory = { check_max( 60.GB, 'memory' ) }
//         ext.args = '--full_clust_res 0.8 --clustree_full TRUE --GeneScore_heatmaps_full TRUE --verbose TRUE'
//     }
//     withName: PEAK_CALL_TL {
//         publishDir = [
//             path: { "${params.outdir}/Processing/${meta.sample_id}/3_peak_call" },
//             mode: 'copy']
//         container = "evahamrud/sc_multi_omic-archr_extra:latest"
//         memory = { check_max( 100.GB, 'memory' ) }
//         ext.args = '--group_by stage_clusters --heatmaps_full TRUE --verbose TRUE'
//     }

// /////////////////////////////////////////////////////////////

// /////////////////////////////////////////////////////////////////////
// ///////////         DOWNSTREAM PROCESSING           /////////////////
// /////////////////////////////////////////////////////////////////////



//     ////    PEAK CLUSTERING WORKFLOW    ////
//     withName: FILTER_PEAKS {
//         publishDir = [
//             path: { "${params.outdir}/Downstream_processing/Cluster_peaks/1_peak_filtering" },
//             mode: 'copy']
//         ext.args = '--verbose TRUE'
//     }
//     withName: CLUSTER_PEAKS {
//         container = "alexthiery/10x-npb-schelper:base"
//         publishDir = [
//             path: { "${params.outdir}/Downstream_processing/Cluster_peaks/2_peak_clustering" },
//             mode: 'copy']
//         memory = { check_max( 100.GB, 'memory' ) }
//     }

//     ////    FINDING ENHANCERS WORKFLOW    ////
//     withName: CALCULATE_SE {
//         publishDir = [
//             path: { "${params.outdir}/Downstream_processing/Find_enhancers/1_calculate_se" },
//             mode: 'copy']
//         memory = { check_max( 100.GB, 'memory' ) }
//         ext.args = '--group_by stage_clusters --verbose TRUE'
//     }
//     withName: FIND_ENHANCERS {
//         publishDir = [
//             path: { "${params.outdir}/Downstream_processing/Find_enhancers/2_find_enhancers" },
//             mode: 'copy']
//         memory = { check_max( 100.GB, 'memory' ) }
//         ext.args = '--verbose TRUE'
//     }





//     withName: COMPARE_INTERCLUSTER_VARIABILITY {
//         publishDir = [
//             path: { "${params.outdir}/Downstream_processing/compare_intercluster_variability" },
//             mode: 'copy']
//         memory = { check_max( 100.GB, 'memory' ) }
//         ext.args = '--verbose TRUE --matrix PeakMatrix'
//     }

//     withName: PLOT_MANUALLY_FILTERED_ENHANCERS {
//         publishDir = [
//             path: { "${params.outdir}/Downstream_processing/transfer_labels/plot_manually_filtered_enhancers" },
//             mode: 'copy']
//         memory = { check_max( 100.GB, 'memory' ) }
//     }

//     /// NPB subset
//     withName: SUBSET_NPB {
//         publishDir = [
//             path: { "${params.outdir}/Downstream_processing/NPB/subset" },
//             mode: 'copy']
//         ext.args = '--meta_col1 stage_clusters --groups1 HH7_C4,HH7_C5,HH7_C6,ss4_C2,ss4_C3,ss4_C5,ss4_C6,ss8_C1,ss8_C5,ss8_C7,ss8_C8 --invert1 FALSE'
//     }
//     withName: CLUSTER_NPB {
//         publishDir = [
//             path: { "${params.outdir}/Downstream_processing/NPB/clustered" },
//             mode: 'copy']
//         ext.args = '--full_clust_res 0.8 --clustree FALSE --verbose TRUE'
//     }
//     withName: PEAK_CALL_NPB {
//         publishDir = [
//             path: { "${params.outdir}/Downstream_processing/NPB/peak_call" },
//             mode: 'copy']
//         container = "evahamrud/sc_multi_omic-archr_extra:latest"
//         memory = { check_max( 100.GB, 'memory' ) }
//         ext.args = '--group_by clusters --verbose TRUE'
//     }

//     /// NPB subset using just labels
//     withName: SUBSET_NPB_LABELS {
//         publishDir = [
//             path: { "${params.outdir}/Downstream_processing/NPB_labels/subset" },
//             mode: 'copy']
//         ext.args = '--meta_col1 stage --groups1 HH7,ss4,ss8 --invert1 FALSE --meta_col2 scHelper_cell_type_old --groups2 aNPB,aPPR,dNC,NC,pNPB,pPPR,PPR --invert2 FALSE'
//     }
//     withName: CLUSTER_NPB_LABELS {
//         publishDir = [
//             path: { "${params.outdir}/Downstream_processing/NPB_labels/clustered" },
//             mode: 'copy']
//         ext.args = '--full_clust_res 0.8 --clustree FALSE --verbose TRUE'
//     }
//     withName: PEAK_CALL_NPB_LABELS {
//         publishDir = [
//             path: { "${params.outdir}/Downstream_processing/NPB_labels/peak_call" },
//             mode: 'copy']
//         container = "evahamrud/sc_multi_omic-archr_extra:latest"
//         memory = { check_max( 100.GB, 'memory' ) }
//         ext.args = '--group_by clusters --verbose TRUE'
//     }


//     /// NPB subset at each stage
//     withName: SUBSET_NPB_HH7 {
//         publishDir = [
//             path: { "${params.outdir}/Downstream_processing/NPB_HH7/subset" },
//             mode: 'copy']
//         ext.args = '--meta_col1 stage_clusters --groups1 HH7_C4,HH7_C5,HH7_C6 --invert1 FALSE'
//     }
//     withName: CLUSTER_NPB_HH7 {
//         publishDir = [
//             path: { "${params.outdir}/Downstream_processing/NPB_HH7/clustered" },
//             mode: 'copy']
//         ext.args = '--full_clust_res 0.8 --clustree FALSE --verbose TRUE'
//     }
//     withName: SUBSET_NPB_SS4 {
//         publishDir = [
//             path: { "${params.outdir}/Downstream_processing/NPB_SS4/subset" },
//             mode: 'copy']
//         ext.args = '--meta_col1 stage_clusters --groups1 ss4_C2,ss4_C3,ss4_C5,ss4_C6 --invert1 FALSE'
//     }
//     withName: CLUSTER_NPB_SS4 {
//         publishDir = [
//             path: { "${params.outdir}/Downstream_processing/NPB_SS4/clustered" },
//             mode: 'copy']
//         ext.args = '--full_clust_res 0.8 --clustree FALSE --verbose TRUE'
//     }
//     withName: SUBSET_NPB_SS8 {
//         publishDir = [
//             path: { "${params.outdir}/Downstream_processing/NPB_SS8/subset" },
//             mode: 'copy']
//         ext.args = '--meta_col1 stage_clusters --groups1 ss8_C1,ss8_C5,ss8_C7,ss8_C8 --invert1 FALSE'
//     }
//     withName: CLUSTER_NPB_SS8 {
//         publishDir = [
//             path: { "${params.outdir}/Downstream_processing/NPB_SS8/clustered" },
//             mode: 'copy']
//         ext.args = '--full_clust_res 0.8 --clustree FALSE --verbose TRUE'
//     }
}
