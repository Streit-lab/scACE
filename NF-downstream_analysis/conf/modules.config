/*
========================================================================================
    Config file for defining DSL2 per module options and publishing paths
========================================================================================
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    // default settings for every process - in base dir for processes with label_med (which is r module)
    //container = "evahamrud/sc_multi_omic-archr:latest"
    //cpus = { check_max( 16, 'cpus' ) }
    //memory = { check_max( 160.GB, 'memory' ) }
    //time = { check_max( 8.h, 'time' ) }

    // ARCHR PROCESSING WORKFLOW - FULL DATA
    withName: ARCHR_PREPROCESSING {
        publishDir = [
            path: { "${params.outdir}/1_ArchR_preprocessing" }]
        cpus = { check_max( 8, 'cpus' ) }
        memory = { check_max( 20.GB, 'memory' ) }
        time = { check_max( 4.h, 'time' ) }
    }
    withName: ARCHR_DOUBLETS {
        publishDir = [
            path: { "${params.outdir}/1.5_ArchR_doublets" }]
    }
    withName: ARCHR_DOUBLETS_FILTERED {
        publishDir = [
            path: { "${params.outdir}/7.5_ArchR_doublets" }]
    }
    withName: ARCHR_FILTERING {
        publishDir = [
            path: { "${params.outdir}/2_ArchR_filtering" }]
    }

    //iterative clustering and filtering poor quality clusters
    withName: ARCHR_CLUSTERING_PREFILTER {
        publishDir = [
            path: { "${params.outdir}/3_ArchR_clustering_prefiltering" }]
    }
    withName: ARCHR_FILTER_CLUSTERS_1 {
        publishDir = [
            path: { "${params.outdir}/4_ArchR_filter_clusters_1" }]
    }
    withName: ARCHR_CLUSTERING_POSTFILTER {
        publishDir = [
            path: { "${params.outdir}/5_ArchR_clustering_postfiltering" }]
    }
    withName: ARCHR_FILTER_CLUSTERS_2 {
        publishDir = [
            path: { "${params.outdir}/6_ArchR_filter_clusters_2" }]
    }
    withName: ARCHR_CLUSTERING_POSTFILTER_TWICE {
        publishDir = [
            path: { "${params.outdir}/7_ArchR_clustering_postfiltering_twice" }]
    }

    withName: ARCHR_GENE_SCORES {
        publishDir = [
            path: { "${params.outdir}/8_ArchR_gene_scores" }]
    }

    // ARCHR PROCESSING WORKFLOW - STAGE BY STAGE

    withName: ARCHR_SPLIT_STAGES {
        publishDir = [
            path: { "${params.outdir}/${meta.sample_id}/ArchR_split_stages" }]
    }

    withName: ARCHR_CLUSTERING_STAGES {
        publishDir = [
            path: { "${params.outdir}/${meta.sample_id}/ArchR_clustering" }]
    }

    withName: ARCHR_GENE_SCORES_STAGES {
        publishDir = [
            path: { "${params.outdir}/${meta.sample_id}/ArchR_gene_scores" }]
    }

}

    
